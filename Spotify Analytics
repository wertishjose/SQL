#For this project, I downloaded Spotify data from Kaggle.
#Then I created a table to insert Spotify data into.
#Finally, I performed analytics on the data using SQL.

#Creating the table:
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL.

#I came up with these questions to further explore the database.

#1.  What are the top 5 longest tracks in terms of duration?

SELECT track_name, artist_name, duration_ms
FROM BIT_DB.Spotifydata
ORDER BY duration_ms DESC
LIMIT 5;

#2.  Which artist has the highest average loudness for their track?

SELECT artist_name, AVG(loudness) AS avg_loudness
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY avg_loudness DESC
LIMIT 1;

#3.  Which tracks have a popularity score above 90?

SELECT track_name, artist_name, popularity
FROM BIT_DB.Spotifydata
WHERE popularity > 90;

#4.  What is the distribution of songs across different keys in terms of count?

SELECT song_key, COUNT(*) AS key_count
FROM BIT_DB.Spotifydata
GROUP BY song_key
ORDER BY key_count DESC;

#5.  What is Olivia Rodrigo's average danceability score?

SELECT artist_name, AVG(danceability) AS avg_danceability
FROM BIT_DB.Spotifydata
WHERE artist_name like '%Olivia Rodrigo%';
